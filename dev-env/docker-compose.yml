version: "3"

services:
  postgresql:
    image: bitnami/postgresql:14.7.0
    environment:
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=postgres
      - POSTGRESQL_DATABASE=postgres
    volumes:
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432

  jaeger:
    image: jaegertracing/all-in-one
    command:
      - "--memory.max-traces"
      - "10000"
      - "--query.base-path"
      - "/jaeger/ui"
      - "--prometheus.server-url"
      - "http://prometheus:9090"
    ports:
      - 16686:16686 # Jaeger UI
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - METRICS_STORAGE_TYPE=prometheus

  grafana:
    image: grafana/grafana:9.4.7
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    ports:
      - 8080:3000

  otelcol:
    image: otel/opentelemetry-collector-contrib:0.76.1
    command: ["--config=/etc/otelcol-config.yml"]
    volumes:
      - ./otelcollector/otelcol-config.yml:/etc/otelcol-config.yml
    ports:
      - 4318:4318 # OTLP over HTTP receiver
      - 4317:4317 # OTLP over gRPC receiver
      - 9464:9464 # Prometheus exporter
      - 8888:8888 # metrics endpoint
    depends_on:
      - jaeger

  prometheus:
    image: quay.io/prometheus/prometheus:v2.43.0
    command:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --storage.tsdb.retention.time=1h
      - --config.file=/etc/prometheus/prometheus-config.yml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --enable-feature=exemplar-storage
    volumes:
      - ./prometheus/prometheus-config.yml:/etc/prometheus/prometheus-config.yml
    ports:
      - 9090:9090

  loki:
    image: grafana/loki:2.8.2
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
